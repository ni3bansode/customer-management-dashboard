{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../customers.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/button\";\nfunction LoginComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage(\"email\"));\n  }\n}\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessage(\"password\"));\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, customerService, router, fb) {\n      this.authService = authService;\n      this.customerService = customerService;\n      this.router = router;\n      this.fb = fb;\n      this.form = this.fb.group({\n        email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    login() {\n      const isAuthenticated = this.authService.login(this.form.value);\n      if (isAuthenticated) {\n        this.customerService.setLogggedIn(true);\n        this.router.navigate(['/all-customers']);\n      } else {\n        console.log('Login failed');\n        this.customerService.setLogggedIn(false);\n      }\n    }\n    getErrorMessage(controlName) {\n      if (this.form.controls[controlName].hasError('required')) {\n        return 'Required field';\n      } else if (this.form.controls[controlName].hasError('email')) {\n        return 'Not a valid email';\n      } else if (this.form.controls[controlName].hasError('minlength')) {\n        return 'Password should be 6 digit long';\n      } else return 'Not a valid';\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.CustomersService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 4,\n      consts: [[1, \"login-card\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"formControlName\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"div\", 1)(6, \"mat-form-field\");\n          i0.ɵɵelement(7, \"input\", 2);\n          i0.ɵɵtemplate(8, LoginComponent_mat_error_8_Template, 2, 1, \"mat-error\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"mat-form-field\");\n          i0.ɵɵelement(10, \"input\", 4);\n          i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 1, \"mat-error\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(13, \" Login \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].invalid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].invalid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      dependencies: [i5.NgIf, i6.MatFormField, i6.MatError, i7.MatInput, i8.MatCard, i8.MatCardContent, i8.MatCardHeader, i8.MatCardTitle, i9.MatButton, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.EmailValidator, i4.FormGroupDirective, i4.FormControlName],\n      styles: [\".login-card[_ngcontent-%COMP%]{max-width:400px;margin:50px auto auto}form[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:20px}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}