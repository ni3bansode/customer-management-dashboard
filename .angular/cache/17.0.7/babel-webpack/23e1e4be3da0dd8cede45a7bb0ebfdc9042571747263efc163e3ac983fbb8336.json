{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../customers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nfunction AddCustomerComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage(\"firstName\"));\n  }\n}\nfunction AddCustomerComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessage(\"lastName\"));\n  }\n}\nfunction AddCustomerComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.getErrorMessage(\"email\"));\n  }\n}\nfunction AddCustomerComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.getErrorMessage(\"phoneNumber\"));\n  }\n}\nexport let AddCustomerComponent = /*#__PURE__*/(() => {\n  class AddCustomerComponent {\n    constructor(customerService, router, fb, route) {\n      this.customerService = customerService;\n      this.router = router;\n      this.fb = fb;\n      this.route = route;\n      this.customerForm = {\n        id: 0,\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: 0\n      };\n      this.title = 'Add';\n      this.form = this.fb.group({\n        id: [],\n        firstName: ['', [Validators.required, Validators.pattern('[a-zA-Z]+$')]],\n        lastName: ['', [Validators.required, Validators.pattern('[a-zA-Z]+$')]],\n        email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n        phoneNumber: ['', [Validators.required, Validators.pattern(/^[0-9]{10}$/)]]\n      });\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(param => {\n        var id = Number(param.get('id'));\n        if (id) {\n          this.getById(id);\n          this.title = 'Update';\n        }\n      });\n    }\n    onFormSubmit() {\n      if (this.title == 'Add') {\n        this.customerService.create(this.form.value).subscribe(() => {\n          this.router.navigate(['/all-customers']);\n        });\n      } else {\n        this.update();\n      }\n    }\n    getErrorMessage(controlName) {\n      if (this.form.controls[controlName].hasError('required')) {\n        return 'Required field';\n      } else if (this.form.controls[controlName].hasError('email')) {\n        return 'Not a valid email';\n      } else if (controlName === 'phoneNumber' && this.form.controls[controlName].invalid) {\n        return 'Not a valid phone';\n      } else return 'Not a valid';\n    }\n    getById(id) {\n      this.customerService.getById(id).subscribe(data => {\n        this.form.patchValue({\n          id: data['id'],\n          firstName: data['firstName'],\n          lastName: data['lastName'],\n          email: data['email'],\n          phoneNumber: data['phoneNumber']\n        });\n      });\n    }\n    update() {\n      new Promise((resolve, reject) => {\n        this.customerService.update(this.form.value).subscribe(res => {\n          resolve(res);\n        });\n      }).then(res => {\n        this.router.navigate(['/all-customers']);\n      });\n    }\n    static #_ = this.ɵfac = function AddCustomerComponent_Factory(t) {\n      return new (t || AddCustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddCustomerComponent,\n      selectors: [[\"app-add-customer\"]],\n      decls: 33,\n      vars: 8,\n      consts: [[1, \"container\", \"add-customer-container\"], [1, \"add-card\"], [2, \"text-align\", \"center\"], [3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"form-element\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"placeholder\", \"First Name\", \"name\", \"First Name\", \"required\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"phoneNumber\"], [\"color\", \"primary\", \"mat-button\", \"\", \"mat-raised-button\", \"\", 1, \"secondary-btn\", 3, \"disabled\", \"click\"]],\n      template: function AddCustomerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"mat-card\", 1)(3, \"h3\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\")(7, \"mat-form-field\", 4)(8, \"mat-label\");\n          i0.ɵɵtext(9, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 5);\n          i0.ɵɵtemplate(11, AddCustomerComponent_mat_error_11_Template, 2, 1, \"mat-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\")(13, \"mat-form-field\", 4)(14, \"mat-label\");\n          i0.ɵɵtext(15, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 7);\n          i0.ɵɵtemplate(17, AddCustomerComponent_mat_error_17_Template, 2, 1, \"mat-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\")(19, \"mat-form-field\", 4)(20, \"mat-label\");\n          i0.ɵɵtext(21, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 8);\n          i0.ɵɵtemplate(23, AddCustomerComponent_mat_error_23_Template, 2, 1, \"mat-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\")(25, \"mat-form-field\", 4)(26, \"mat-label\");\n          i0.ɵɵtext(27, \"Phone Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 9);\n          i0.ɵɵtemplate(29, AddCustomerComponent_mat_error_29_Template, 2, 1, \"mat-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"div\")(31, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AddCustomerComponent_Template_button_click_31_listener() {\n            return ctx.onFormSubmit();\n          });\n          i0.ɵɵtext(32);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"\", ctx.title, \" Customers Data\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"firstName\"].invalid);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"lastName\"].invalid);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].invalid);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"phoneNumber\"].invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.title, \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatInput, i7.MatCard, i8.MatButton, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".form-element[_ngcontent-%COMP%]{width:500px}.add-customer-container[_ngcontent-%COMP%]{padding:20px}.add-card[_ngcontent-%COMP%]{max-height:424px;max-width:500px}\"],\n      changeDetection: 0\n    });\n  }\n  return AddCustomerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}